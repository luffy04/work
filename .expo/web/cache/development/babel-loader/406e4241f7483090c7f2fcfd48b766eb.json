{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"D:\\\\Mansehej\\\\Projects\\\\stayrific_app\\\\material-kit-pro-react-native-v1.4.0\\\\screens\\\\Chat.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { Input, Block, Text, Button, theme } from 'galio-framework';\nimport { Icon } from \"../components/\";\nimport Images from \"../constants/Images\";\nimport materialTheme from \"../constants/Theme\";\n\nvar _Dimensions$get = Dimensions.get('screen'),\n    width = _Dimensions$get.width;\n\nvar messages = [{\n  id: 1,\n  avatar: Images.Avatar,\n  message: \"Hey there! How are you today? Can we me et and talk? Thanks!\",\n  time: \"10:31 PM\"\n}, {\n  id: 2,\n  message: \"Sure, just let me finish something and I\\u2019ll call you.\",\n  time: \"10:34 PM\"\n}, {\n  id: 3,\n  avatar: Images.Avatar,\n  message: \"OK. Cool! See you!\",\n  time: \"10:35 PM\"\n}, {\n  id: 4,\n  message: \"Bye bye\",\n  time: \"10:36 PM\"\n}];\n\nvar Chat = function (_React$Component) {\n  _inherits(Chat, _React$Component);\n\n  function Chat() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Chat)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      messages: messages,\n      height: 0\n    };\n    _this.messagesScroll = React.createRef();\n\n    _this.itemLayout = function (data, index) {\n      return {\n        length: _this.state.messages.length - 1,\n        offset: 32 * index,\n        index: index\n      };\n    };\n\n    _this.handleScroll = function () {\n      setTimeout(function () {\n        _this.messagesScroll.current.scrollToOffset({\n          offset: _this.state.height\n        });\n      }, 1);\n    };\n\n    _this.onContentSizeChange = function (width, height) {\n      _this.setState({\n        height: height\n      });\n    };\n\n    _this.renderMessage = function (msg) {\n      return React.createElement(Block, {\n        key: msg.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        }\n      }, React.createElement(Block, {\n        row: true,\n        space: !msg.avatar ? 'between' : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        }\n      }, React.createElement(Image, {\n        source: {\n          uri: msg.avatar\n        },\n        style: [styles.avatar, styles.shadow],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        }\n      }), React.createElement(Block, {\n        style: styles.messageCardWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        }\n      }, msg.avatar ? React.createElement(Block, {\n        style: [styles.messageCard, styles.shadow],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        }\n      }, msg.message)) : React.createElement(LinearGradient, {\n        start: {\n          x: 0,\n          y: 0\n        },\n        end: {\n          x: 1,\n          y: 0\n        },\n        colors: ['#6C24AA', '#AC2688'],\n        style: [styles.messageCard, styles.shadow],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        }\n      }, React.createElement(Text, {\n        color: theme.COLORS.WHITE,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        }\n      }, msg.message)), React.createElement(Block, {\n        right: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        }\n      }, React.createElement(Text, {\n        style: styles.time,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        }\n      }, msg.time)))));\n    };\n\n    _this.renderMessages = function () {\n      var insetBottom = _this.state.messages.length * (theme.SIZES.BASE * 6.5) + 64;\n      return React.createElement(FlatList, {\n        ref: _this.messagesScroll,\n        data: _this.state.messages,\n        keyExtractor: function keyExtractor(item) {\n          return \"\" + item.id;\n        },\n        showsVerticalScrollIndicator: false,\n        getItemLayout: _this.itemLayout,\n        contentContainerStyle: [styles.messagesWrapper],\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return _this.renderMessage(item);\n        },\n        onContentSizeChange: _this.onContentSizeChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        }\n      });\n    };\n\n    _this.handleMessageChange = function (type, text) {\n      _this.setState({\n        message: text\n      });\n    };\n\n    _this.handleMessage = function () {\n      var _this$state = _this.state,\n          messages = _this$state.messages,\n          message = _this$state.message;\n      var date = new Date();\n      messages.push({\n        id: messages.length + 1,\n        message: message,\n        time: date.toLocaleString('en-US', {\n          hour: '2-digit',\n          minute: 'numeric'\n        })\n      });\n\n      _this.setState({\n        messages: messages,\n        message: ''\n      });\n\n      _this.handleScroll();\n    };\n\n    _this.messageForm = function () {\n      var navigation = _this.props.navigation;\n      return React.createElement(View, {\n        style: styles.messageFormContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        }\n      }, React.createElement(Block, {\n        flex: true,\n        row: true,\n        middle: true,\n        space: \"between\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        }\n      }, React.createElement(Button, {\n        round: true,\n        shadowless: true,\n        radius: 28,\n        opacity: 0.9,\n        style: styles.iconButton,\n        color: materialTheme.COLORS.BUTTON_COLOR,\n        onPress: function onPress() {\n          return navigation.navigate('Chat');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        }\n      }, React.createElement(Icon, {\n        size: 16,\n        name: \"camera-18\",\n        family: \"GalioExtra\",\n        color: theme.COLORS.MUTED,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        }\n      })), React.createElement(Input, {\n        borderless: true,\n        color: \"#9fa5aa\",\n        multiline: true,\n        blurOnSubmit: true,\n        style: styles.input,\n        placeholder: \"Message\",\n        autoCapitalize: \"none\",\n        returnKeyType: \"send\",\n        textContentType: \"none\",\n        placeholderTextColor: \"#9fa5aa\",\n        defaultValue: _this.state.message,\n        onSubmitEditing: _this.handleMessage,\n        onChangeText: function onChangeText(text) {\n          return _this.handleMessageChange('message', text);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        }\n      })));\n    };\n\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Block, {\n        flex: true,\n        space: \"between\",\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        }\n      }, React.createElement(KeyboardAvoidingView, {\n        enabled: true,\n        behavior: \"padding\",\n        style: {\n          flex: 1\n        },\n        keyboardVerticalOffset: theme.SIZES.BASE * 3.2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        }\n      }, this.renderMessages(), this.messageForm()));\n    }\n  }]);\n\n  return Chat;\n}(React.Component);\n\nexport { Chat as default };\nvar styles = StyleSheet.create({\n  container: {},\n  messageFormContainer: {\n    height: 96,\n    paddingHorizontal: 16,\n    paddingTop: 16,\n    paddingBottom: 32\n  },\n  input: {\n    width: width * 0.78,\n    height: theme.SIZES.BASE * 3,\n    backgroundColor: theme.COLORS.WHITE\n  },\n  iconButton: {\n    width: 40,\n    height: 40,\n    backgroundColor: 'transparent'\n  },\n  messagesWrapper: {\n    flexGrow: 1,\n    top: 0,\n    paddingLeft: 8,\n    paddingRight: 16,\n    paddingVertical: 16,\n    paddingBottom: 68\n  },\n  messageCardWrapper: {\n    maxWidth: '85%',\n    marginLeft: 8,\n    marginBottom: 32\n  },\n  messageCard: {\n    paddingHorizontal: 8,\n    paddingVertical: 16,\n    borderRadius: 6,\n    backgroundColor: theme.COLORS.WHITE\n  },\n  shadow: {\n    shadowColor: \"rgba(0, 0, 0, 0.12)\",\n    shadowOffset: {\n      width: 0,\n      height: 7\n    },\n    shadowRadius: 20,\n    shadowOpacity: 1\n  },\n  time: {\n    fontSize: 11,\n    opacity: 0.5,\n    marginTop: 8\n  },\n  avatar: {\n    height: 40,\n    width: 40,\n    borderRadius: 20,\n    marginBottom: theme.SIZES.BASE\n  }\n});","map":{"version":3,"sources":["D:/Mansehej/Projects/stayrific_app/material-kit-pro-react-native-v1.4.0/screens/Chat.js"],"names":["React","LinearGradient","Input","Block","Text","Button","theme","Icon","Images","materialTheme","Dimensions","get","width","messages","id","avatar","Avatar","message","time","Chat","state","height","messagesScroll","createRef","itemLayout","data","index","length","offset","handleScroll","setTimeout","current","scrollToOffset","onContentSizeChange","setState","renderMessage","msg","uri","styles","shadow","messageCardWrapper","messageCard","x","y","COLORS","WHITE","renderMessages","insetBottom","SIZES","BASE","item","messagesWrapper","handleMessageChange","type","text","handleMessage","date","Date","push","toLocaleString","hour","minute","messageForm","navigation","props","messageFormContainer","iconButton","BUTTON_COLOR","navigate","MUTED","input","container","flex","Component","StyleSheet","create","paddingHorizontal","paddingTop","paddingBottom","backgroundColor","flexGrow","top","paddingLeft","paddingRight","paddingVertical","maxWidth","marginLeft","marginBottom","borderRadius","shadowColor","shadowOffset","shadowRadius","shadowOpacity","fontSize","opacity","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  View,\n  Image,\n  Dimensions,\n  StyleSheet,\n  ScrollView,\n  FlatList,\n  KeyboardAvoidingView,\n} from 'react-native';\n\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { Input, Block, Text, Button, theme } from 'galio-framework';\nimport { Icon } from '../components/';\n\nimport Images from \"../constants/Images\";\nimport materialTheme from '../constants/Theme';\n\nconst { width } = Dimensions.get('screen');\nconst messages = [\n  {\n    id: 1,\n    avatar: Images.Avatar,\n    message: `Hey there! How are you today? Can we me et and talk? Thanks!`,\n    time: `10:31 PM`,\n  },\n  {\n    id: 2,\n    message: `Sure, just let me finish something and I’ll call you.`,\n    time: `10:34 PM`,\n  },\n  {\n    id: 3,\n    avatar: Images.Avatar,\n    message: `OK. Cool! See you!`,\n    time: `10:35 PM`,\n  },\n  {\n    id: 4,\n    message: `Bye bye`,\n    time: `10:36 PM`,\n  },\n];\n\nexport default class Chat extends React.Component {\n  state = {\n    messages: messages,\n    height: 0\n  };\n\n  messagesScroll = React.createRef();\n\n  itemLayout = (data, index) => (\n    { length: (this.state.messages.length - 1), offset: 32 * index, index }\n  )\n\n  handleScroll = () => {\n    // const totalIndex = this.state.messages.length - 1;\n    // const insetBottom = this.state.messages.length * (theme.SIZES.BASE * 6.5) + 64; // total messages x message height\n    setTimeout(() => {\n        this.messagesScroll.current.scrollToOffset({ offset: this.state.height });\n    }, 1);\n    \n  }\n\n  onContentSizeChange = (width,height) => {\n    this.setState({\n      height\n    });\n  }\n\n  componentDidMount() {\n    // this.handleScroll();\n  }\n\n  renderMessage = (msg) => {\n    return (\n      <Block key={msg.id}>\n        <Block row space={!msg.avatar? 'between' : null}>\n          <Image source={{ uri: msg.avatar }} style={[styles.avatar, styles.shadow]} />\n          <Block style={styles.messageCardWrapper}>\n            {msg.avatar ?\n              <Block style={[styles.messageCard, styles.shadow]}>\n                <Text>{msg.message}</Text>\n              </Block> :\n              <LinearGradient\n                start={{ x: 0, y: 0 }}\n                end={{ x: 1, y: 0 }}\n                colors={['#6C24AA', '#AC2688']}\n                style={[styles.messageCard, styles.shadow]}>              \n                <Text color={theme.COLORS.WHITE}>{msg.message}</Text>\n              </LinearGradient>\n            }\n            <Block right>\n              <Text style={styles.time}>{msg.time}</Text>\n            </Block>\n          </Block>\n        </Block>\n      </Block>\n    )\n  }\n\n  renderMessages = () => {\n    const insetBottom = this.state.messages.length * (theme.SIZES.BASE * 6.5) + 64; // total messages x message height\n    return (\n      <FlatList\n        ref={this.messagesScroll}\n        data={this.state.messages}\n        keyExtractor={item => `${item.id}`}\n        showsVerticalScrollIndicator={false}\n        getItemLayout={this.itemLayout}\n        contentContainerStyle={[styles.messagesWrapper]}\n        renderItem={({ item }) => this.renderMessage(item)}\n        onContentSizeChange={this.onContentSizeChange}\n      />\n    )\n  }\n\n  handleMessageChange = (type, text) => {\n    this.setState({ message: text });\n  }\n\n  handleMessage = () => {\n    const { messages, message } = this.state;\n    const date = new Date();\n\n    messages.push({\n      id: messages.length + 1,\n      message: message,\n      time: date.toLocaleString('en-US', { hour: '2-digit', minute: 'numeric' }),\n    });\n\n    this.setState({ messages, message: '' });\n    this.handleScroll();\n  }\n\n  messageForm = () => {\n    const { navigation } = this.props;\n    \n    return (\n      <View style={styles.messageFormContainer}>\n        <Block flex row middle space=\"between\" >\n          <Button\n            round\n            shadowless\n            radius={28}\n            opacity={0.9}\n            style={styles.iconButton}\n            color={materialTheme.COLORS.BUTTON_COLOR}\n            onPress={() => navigation.navigate('Chat')}>\n            <Icon size={16} name=\"camera-18\" family=\"GalioExtra\" color={theme.COLORS.MUTED} />\n          </Button>\n          <Input\n            borderless\n            color=\"#9fa5aa\"\n            multiline\n            blurOnSubmit\n            style={styles.input}\n            placeholder=\"Message\"\n            autoCapitalize=\"none\"\n            returnKeyType=\"send\"\n            textContentType=\"none\"\n            placeholderTextColor=\"#9fa5aa\"\n            defaultValue={this.state.message}\n            onSubmitEditing={this.handleMessage}\n            onChangeText={text => this.handleMessageChange('message', text)}\n          />\n        </Block>\n      </View>\n    );\n  }\n\n  render() {\n    return (\n      <Block flex space=\"between\" style={styles.container}>\n        <KeyboardAvoidingView\n          enabled\n          behavior=\"padding\"\n          style={{ flex: 1 }}\n          keyboardVerticalOffset={theme.SIZES.BASE * 3.2}>\n          {this.renderMessages()}\n          {this.messageForm()}\n        </KeyboardAvoidingView>\n      </Block>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    \n  },\n  messageFormContainer: {\n    height: 96,\n    paddingHorizontal: 16,\n    paddingTop: 16,\n    paddingBottom: 32,    \n  },\n  input: {\n    width: width * 0.78,\n    height: theme.SIZES.BASE * 3,\n    backgroundColor: theme.COLORS.WHITE,\n  },\n  iconButton: {\n    width: 40,\n    height: 40,\n    backgroundColor: 'transparent',\n  },\n  messagesWrapper: {\n    flexGrow: 1,\n    top: 0,\n    paddingLeft: 8,\n    paddingRight: 16,\n    paddingVertical: 16,\n    paddingBottom: 68\n  },\n  messageCardWrapper: {\n    maxWidth: '85%',\n    marginLeft: 8,\n    marginBottom: 32,\n  },\n  messageCard: {\n    paddingHorizontal: 8,\n    paddingVertical: 16,\n    borderRadius: 6,\n    backgroundColor: theme.COLORS.WHITE,\n  },\n  shadow: {\n    shadowColor: \"rgba(0, 0, 0, 0.12)\",\n    shadowOffset: { width: 0, height: 7 },\n    shadowRadius: 20,\n    shadowOpacity: 1\n  },\n  time: {\n    fontSize: 11,\n    opacity: 0.5,\n    marginTop: 8,\n  },\n  avatar: {\n    height: 40,\n    width: 40,\n    borderRadius: 20,\n    marginBottom: theme.SIZES.BASE,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}