{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"D:\\\\Mansehej\\\\Projects\\\\stayrific_app\\\\material-kit-pro-react-native-v1.4.0\\\\App.js\";\nimport React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { AppLoading } from 'expo';\nimport { Asset } from 'expo-asset';\nimport { Block, GalioProvider } from 'galio-framework';\nimport Screens from \"./navigation/Screens\";\nimport { Images, materialTheme } from \"./constants/\";\nvar assetImages = [Images.Profile, Images.Avatar, Images.Onboarding, Images.Products.Auto, Images.Products.Motocycle, Images.Products.Watches, Images.Products.Makeup, Images.Products.Accessories, Images.Products.Fragrance, Images.Products.BMW, Images.Products.Mustang, Images.Products['Harley-Davidson']];\n\nfunction cacheImages(images) {\n  return images.map(function (image) {\n    if (typeof image === 'string') {\n      return Image.prefetch(image);\n    } else {\n      return Asset.fromModule(image).downloadAsync();\n    }\n  });\n}\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isLoadingComplete: false\n    };\n\n    _this._loadResourcesAsync = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", Promise.all(_toConsumableArray(cacheImages(assetImages))));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    _this._handleLoadingError = function (error) {\n      console.warn(error);\n    };\n\n    _this._handleFinishLoading = function () {\n      _this.setState({\n        isLoadingComplete: true\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      if (!this.state.isLoadingComplete && !this.props.skipLoadingScreen) {\n        return React.createElement(AppLoading, {\n          startAsync: this._loadResourcesAsync,\n          onError: this._handleLoadingError,\n          onFinish: this._handleFinishLoading,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          }\n        });\n      } else {\n        return React.createElement(GalioProvider, {\n          theme: materialTheme,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          }\n        }, React.createElement(Block, {\n          flex: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          }\n        }, Platform.OS === 'ios' && React.createElement(StatusBar, {\n          barStyle: \"default\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          }\n        }), React.createElement(Screens, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          }\n        })));\n      }\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["D:/Mansehej/Projects/stayrific_app/material-kit-pro-react-native-v1.4.0/App.js"],"names":["React","AppLoading","Asset","Block","GalioProvider","Screens","Images","materialTheme","assetImages","Profile","Avatar","Onboarding","Products","Auto","Motocycle","Watches","Makeup","Accessories","Fragrance","BMW","Mustang","cacheImages","images","map","image","Image","prefetch","fromModule","downloadAsync","App","state","isLoadingComplete","_loadResourcesAsync","Promise","all","_handleLoadingError","error","console","warn","_handleFinishLoading","setState","props","skipLoadingScreen","Platform","OS","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,UAAT,QAA2B,MAA3B;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,aAAhB,QAAqC,iBAArC;AAEA,OAAOC,OAAP;AACA,SAASC,MAAT,EAAiBC,aAAjB;AAEA,IAAMC,WAAW,GAAG,CAClBF,MAAM,CAACG,OADW,EAElBH,MAAM,CAACI,MAFW,EAGlBJ,MAAM,CAACK,UAHW,EAIlBL,MAAM,CAACM,QAAP,CAAgBC,IAJE,EAKlBP,MAAM,CAACM,QAAP,CAAgBE,SALE,EAMlBR,MAAM,CAACM,QAAP,CAAgBG,OANE,EAOlBT,MAAM,CAACM,QAAP,CAAgBI,MAPE,EAQlBV,MAAM,CAACM,QAAP,CAAgBK,WARE,EASlBX,MAAM,CAACM,QAAP,CAAgBM,SATE,EAUlBZ,MAAM,CAACM,QAAP,CAAgBO,GAVE,EAWlBb,MAAM,CAACM,QAAP,CAAgBQ,OAXE,EAYlBd,MAAM,CAACM,QAAP,CAAgB,iBAAhB,CAZkB,CAApB;;AAuBA,SAASS,WAAT,CAAqBC,MAArB,EAA6B;AAC3B,SAAOA,MAAM,CAACC,GAAP,CAAW,UAAAC,KAAK,EAAI;AACzB,QAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,aAAOC,KAAK,CAACC,QAAN,CAAeF,KAAf,CAAP;AACD,KAFD,MAEO;AACL,aAAOtB,KAAK,CAACyB,UAAN,CAAiBH,KAAjB,EAAwBI,aAAxB,EAAP;AACD;AACF,GANM,CAAP;AAOD;;IAEoBC,G;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,iBAAiB,EAAE;AADb,K;;UAyBRC,mB,GAAsB;AAAA;AAAA;AAAA;AAAA;AAAA,+CACbC,OAAO,CAACC,GAAR,oBACFb,WAAW,CAACb,WAAD,CADT,EADa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;UAMtB2B,mB,GAAsB,UAAAC,KAAK,EAAI;AAG7BC,MAAAA,OAAO,CAACC,IAAR,CAAaF,KAAb;AACD,K;;UAEDG,oB,GAAuB,YAAM;AAC3B,YAAKC,QAAL,CAAc;AAAET,QAAAA,iBAAiB,EAAE;AAArB,OAAd;AACD,K;;;;;;;6BAnCQ;AACP,UAAI,CAAC,KAAKD,KAAL,CAAWC,iBAAZ,IAAiC,CAAC,KAAKU,KAAL,CAAWC,iBAAjD,EAAoE;AAClE,eACE,oBAAC,UAAD;AACE,UAAA,UAAU,EAAE,KAAKV,mBADnB;AAEE,UAAA,OAAO,EAAE,KAAKG,mBAFhB;AAGE,UAAA,QAAQ,EAAE,KAAKI,oBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,OARD,MAQO;AACL,eACE,oBAAC,aAAD;AAAe,UAAA,KAAK,EAAEhC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD;AAAO,UAAA,IAAI,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA,WACGoC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,IAAyB,oBAAC,SAAD;AAAW,UAAA,QAAQ,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA,UAD5B,EAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,CADF,CADF;AAQD;AACF;;;;EAxB8B5C,KAAK,CAAC6C,S;;SAAlBhB,G","sourcesContent":["import React from 'react';\nimport { Platform, StatusBar, Image } from 'react-native';\nimport { AppLoading } from 'expo';\nimport { Asset } from 'expo-asset';\nimport { Block, GalioProvider } from 'galio-framework';\n\nimport Screens from './navigation/Screens';\nimport { Images, materialTheme } from './constants/';\n\nconst assetImages = [\n  Images.Profile,\n  Images.Avatar,\n  Images.Onboarding,\n  Images.Products.Auto,\n  Images.Products.Motocycle,\n  Images.Products.Watches,\n  Images.Products.Makeup,\n  Images.Products.Accessories,\n  Images.Products.Fragrance,\n  Images.Products.BMW,\n  Images.Products.Mustang,\n  Images.Products['Harley-Davidson'],\n];\n\n// cache product images\n// products.map(product => assetImages.push(product.image));\n\n// cache categories images\n// Object.keys(categories).map(key => {\n//   categories[key].map(category => assetImages.push(category.image));\n// });\n\nfunction cacheImages(images) {\n  return images.map(image => {\n    if (typeof image === 'string') {\n      return Image.prefetch(image);\n    } else {\n      return Asset.fromModule(image).downloadAsync();\n    }\n  });\n}\n\nexport default class App extends React.Component {\n  state = {\n    isLoadingComplete: false,\n  };\n\n  render() {\n    if (!this.state.isLoadingComplete && !this.props.skipLoadingScreen) {\n      return (\n        <AppLoading\n          startAsync={this._loadResourcesAsync}\n          onError={this._handleLoadingError}\n          onFinish={this._handleFinishLoading}\n        />\n      );\n    } else {\n      return (\n        <GalioProvider theme={materialTheme}>\n          <Block flex>\n            {Platform.OS === 'ios' && <StatusBar barStyle=\"default\" />}\n            <Screens />\n          </Block>\n        </GalioProvider>\n      );\n    }\n  }\n\n  _loadResourcesAsync = async () => {\n    return Promise.all([\n      ...cacheImages(assetImages),\n    ]);\n  };\n\n  _handleLoadingError = error => {\n    // In this case, you might want to report the error to your error\n    // reporting service, for example Sentry\n    console.warn(error);\n  };\n\n  _handleFinishLoading = () => {\n    this.setState({ isLoadingComplete: true });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}